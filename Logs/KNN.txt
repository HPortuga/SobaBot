Parameter Tuning: KNN
============================
The following parameters were tuned to the algorithm with exhaustive search:
n_neighbors: [1 3 5 7 9]
weights: ['uniform', 'distance']
algorithm: ['ball_tree', 'kd_tree', 'brute']
metric: ['euclidean', 'manhattan']

============================
The results are:

0
  Mean: 0.743119, Std: 0.102797
  Params: {'weights': 'uniform', 'n_neighbors': 1, 'metric': 'manhattan', 'algorithm': 'brute'}

1
  Mean: 0.733945, Std: 0.116331
  Params: {'weights': 'distance', 'n_neighbors': 1, 'metric': 'euclidean', 'algorithm': 'kd_tree'}

2
  Mean: 0.733945, Std: 0.116331
  Params: {'weights': 'uniform', 'n_neighbors': 1, 'metric': 'euclidean', 'algorithm': 'kd_tree'}

3
  Mean: 0.715596, Std: 0.092558
  Params: {'weights': 'distance', 'n_neighbors': 3, 'metric': 'manhattan', 'algorithm': 'ball_tree'}

4
  Mean: 0.587156, Std: 0.059657
  Params: {'weights': 'uniform', 'n_neighbors': 7, 'metric': 'manhattan', 'algorithm': 'kd_tree'}

5
  Mean: 0.568807, Std: 0.081584
  Params: {'weights': 'distance', 'n_neighbors': 7, 'metric': 'euclidean', 'algorithm': 'ball_tree'}

6
  Mean: 0.559633, Std: 0.115675
  Params: {'weights': 'uniform', 'n_neighbors': 5, 'metric': 'euclidean', 'algorithm': 'ball_tree'}

7
  Mean: 0.532110, Std: 0.102394
  Params: {'weights': 'distance', 'n_neighbors': 9, 'metric': 'euclidean', 'algorithm': 'kd_tree'}

8
  Mean: 0.532110, Std: 0.102394
  Params: {'weights': 'distance', 'n_neighbors': 9, 'metric': 'euclidean', 'algorithm': 'ball_tree'}

9
  Mean: 0.504587, Std: 0.104848
  Params: {'weights': 'uniform', 'n_neighbors': 9, 'metric': 'euclidean', 'algorithm': 'kd_tree'}

